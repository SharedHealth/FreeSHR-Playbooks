- name: "cassandra"
  hosts: cassandra_node
  sudo: yes
  roles:
    - { role: cassandra-cluster }
    - { role: cassandra-cleanup }
  vars_files:
    - vars/cassandra.yml
  tags:
    - cassandra

- name: "cassandra-cleanup"
  hosts: cassandra_node
  sudo: yes
  roles:
    - { role: cassandra-cleanup }
  tags:
    - cassandra-cleanup

- name: "opscenter"
  sudo: yes
  hosts: 
    - opscenter-server
  roles:
    - { role: opscenter }
  tags:
    - opscenter-server

- name: "opscenter-agent"
  sudo: yes
  hosts: 
    - cassandra_node
  roles:
    - { role: opscenter-agent }
  tags:
    - opscenter-agent

- name: "shr"
  hosts: shr
  sudo: yes
  roles:
    - { role: bdshr-server }
  tags:
    - shr

- hosts: freeshr-update-server
  sudo: yes
  roles:
    - { role: freeshr-update }
  tags:
    - freeshr-update-server


- hosts: mci-ui
  sudo: yes
  roles:
    - { role: apache, tags: ['infrastructure'] }
    - { role: php-packages, tags: ['infrastructure'] }
    - { role: mci-ui, tags: ['application'] }
  vars:
    mci_ui_home: "/var/www/mci_ui"
    identity_server_domain: "null"
    identity_server_port: "8080"
  tags:
    - mci-ui


- hosts: mci-server
  sudo: yes
  roles:
    - { role: mci-server }
  vars:
    mci_home: "{{lookup('env', 'HOME')}}/projects/mci"
    hostname_name: "{{ansible_fqdn}}"
  tags:
    - mci-server

- hosts: cassandra_seed_node
  sudo: yes
  vars:
    data_destination_dir: "{{ mci_seed_data_dir }}"
    sql_file: "locations.cql"
    data_source: "{{ data_file }}"
    keyspace: "{{ mci_keyspace }}"
    cassandra_keyspace_user: "{{ mci_cassandra_user }}"
    cassandra_keyspace_pass: "{{ mci_cassandra_pass }}"
  roles:
    - { role: cassandra-data-dump }
  tags:
    - mci-seed-data

- hosts: tr-server
  sudo: yes
  roles:
   - role: tr-server
  tags:
    - tr-server

- hosts: tr-server
  sudo: yes
  roles:
   - role: tr-feed-server
  tags:
    - tr-feed-server
     
- hosts: tr-server
  sudo: yes
  vars:
    sql_file: "concept_data.sql"
    database: "terminologies"
    data_destination_dir: "{{ tr_seed_data_dest_dir }}"
    mysql_user: "terminologies"
    mysql_password: "{{ tr_mysql_user_password }}"
  roles:
   - role: mysql-data-dump
  tags:
    - tr-seed-data

- hosts: datasense
  sudo: yes
  roles:
    - role: datasense-server
  tags:
    - datasense

- hosts: identity-server
  sudo: yes
  roles:
    - { role: identity-server }
  tags:
    - identity-server

- hosts: patient-journal-server
  sudo: yes
  roles:
    - { role: patient-journal }
  tags:
    - patient-journal


- hosts: healthid-server
  sudo: yes
  roles:
    - { role: healthid-server }
  tags:
    - healthid-server


- hosts: dhis
  sudo: yes
  user: user
  vars:
    dhis_home: /home/dhis/
    admin_username: admin
    admin_password: 0f359740bd1cda994f8b55330c86d845
    http_port: 8080
    https_port: 8443
    tomcat_ver: 7.0.53
  roles:
     - tomcat
     - dhis
  tags:
    - dhis

- hosts: go-server
  sudo: yes
  roles:
    - go-server
  vars_files:
    - vars/go.yml
  tags:
    - go-server

- hosts: go-agent
  sudo: yes
  roles:
    - go-agent
  vars_files:
    - vars/go.yml
  tags:
    - go-agent

- hosts: haproxy
  sudo: yes
  roles:
    - { role: haproxy }
  tags:
    - haproxy


- hosts: all
  sudo: yes
  tasks:
    - name: copy go keys to machine
      authorized_key: user=bdshr key="{{ lookup('file', '/var/go/.ssh/id_rsa.pub') }}"
  tags:
    - copy-go-keys

- hosts: all:!external-registries
  sudo: yes
  roles:
    - {role: selinux, selinux_state: permissive, selinux_policy: targeted }
  tags:
    - selinux
    
- hosts: all
  sudo: yes
  vars:
    setup_nrpe: "yes"
  roles:
    - { role: shr-base }
    - { role: bdshr-user }
    - { role: nagios-agent, when: setup_nrpe == "yes" }
    - { role: shr-tools }
    - { role: selinux, selinux_state: permissive, selinux_policy: targeted }
  vars_files:
    - group_vars/all
    - vars/nrpe.yml
  tags:
    - setup

- hosts: nagios_hosts
  sudo: yes
  vars_files:
    - vars/nagios.yml
    - group_vars/all
  roles:
   - role: nagios
  tags:
    - nagios-server

- hosts: all:!dhis:!external-registries
  sudo: True
  vars_files:
    - vars/nrpe.yml
  roles:
   - role: nagios-agent
  tags:
    - nagios-agents
