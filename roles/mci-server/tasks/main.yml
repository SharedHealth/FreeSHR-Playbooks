---
- name: Clean existing
  shell: rm -f /tmp/mci.rpm

- name: Copy rpm
  copy: src='{{item}}' dest=/tmp/mci.rpm mode=755
  with_fileglob:
    - "{{rpm}}"

- name: Remove existing installation if any
  yum: name=mci-0.1-1.noarch state=absent

- name: Install mci
  yum: name=/tmp/mci.rpm state=present

- name: Allow app dir access to run user
  file:
    path={{ mci_install_dir }}
    owner={{ sharedhealth_user }}
    group={{ sharedhealth_group }}
    follow=yes
    recurse=yes
    state=directory

- name: Allow log dir access to run user
  file:
    path={{ mci_log_dir }}
    owner={{ sharedhealth_user }}
    group={{ sharedhealth_group }}
    follow=yes
    recurse=yes
    state=directory


- name: Copy properties
  template: src=mci.j2
    dest=/etc/default/mci
    mode=755
    owner={{ sharedhealth_user }}
    group={{ sharedhealth_group }}


- name: Permissions to service mci
  file:
    path=/etc/init.d/mci
    src={{ mci_install_dir }}/bin/mci
    owner={{ sharedhealth_user }}
    group={{ sharedhealth_group }}
    state=link


- name: Permissions to var run
  file:
    path=/var/run/mci
    src={{ mci_install_dir }}/var
    owner={{ sharedhealth_user }}
    group={{ sharedhealth_group }}
    state=link

- name: Apply migrations to leader node
  shell: "{{ mci_install_dir }}/bin/migrate.sh"
  when: run_migrations == "yes"

- name: Get IpTable rules
  shell: iptables -L
  register: iptablesrules

- name: Allow mci port through firewall
  command: /sbin/iptables -I INPUT 1 -p tcp --dport {{ mci_port }} -j ACCEPT -m comment --comment "MCI"
  when: iptablesrules.stdout.find("MCI") == -1

- name: save iptables
  command: service iptables save

- name: Restart mci
  service: name=mci state=restarted enabled=yes
  sudo_user : "{{ sharedhealth_user }}"
  tags: run_mci

