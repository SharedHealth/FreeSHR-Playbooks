<pipelines group="SharedHealth-Artifacts">
    <pipeline name="openmrs-module-bdshrclient" isLocked="false">
      <materials>
        <git url="https://github.com/SharedHealth/openmrs-module-bdshrclient.git" />
      </materials>
      <stage name="build">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="/usr/share/applications/mvn/bin/mvn">
                <arg>clean</arg>
                <arg>install</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="shrclient-omod/target/" dest="installers"/>
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="qa">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <fetchartifact pipeline="openmrs-module-bdshrclient" stage="build" job="build" srcdir="installers">
                <runif status="passed" />
              </fetchartifact>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Bahmni-Playbooks/shr-client.yml -i /playbooks/FreeSHR-Bahmni-Playbooks/qa -t shr-client-deploy --extra-vars "omod=/var/lib/go-agent/pipelines/$GO_PIPELINE_NAME/installers/shrclient-1.0-SNAPSHOT.omod" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="showcase">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Bahmni-Playbooks/shr-client.yml -i /playbooks/FreeSHR-Bahmni-Playbooks/showcase -t shr-client-deploy --extra-vars "omod=/tmp/shrclient-1.0-SNAPSHOT.omod" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="BDSHR" isLocked="false">
      <materials>
        <git url="https://github.com/SharedHealth/FreeSHR.git" />
      </materials>
      <stage name="build">
        <jobs>
          <job name="defaultJob">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>sh build-dist.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="shr/build/distributions/shr-0.1-*.noarch.rpm" dest="installers" />
              <test src="shr/build/test-results" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="qa">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <fetchartifact pipeline="BDSHR" stage="build" job="defaultJob" srcdir="installers">
                <runif status="passed" />
              </fetchartifact>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Playbooks/all.yml -t shr -i /playbooks/FreeSHR-Playbooks/qa --extra-vars "rpm=/var/lib/go-agent/pipelines/BDSHR/installers/shr-0.1-$GO_PIPELINE_COUNTER.noarch.rpm" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="showcase">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>curl -u admin:p@ssw0rd678 http://172.18.46.51:8153/go/files/BDSHR/$GO_PIPELINE_COUNTER/build/latest/defaultJob/shr-0.1-${GO_PIPELINE_COUNTER}.noarch.rpm &gt; /tmp/shr-0.1-${GO_PIPELINE_COUNTER}.noarch.rpm</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Playbooks/all.yml -t shr -i /playbooks/FreeSHR-Playbooks/showcase --extra-vars "rpm=/tmp/shr-0.1-$GO_PIPELINE_COUNTER.noarch.rpm" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="AtomFeedOmod">
      <materials>
        <git url="https://github.com/ICT4H/openmrs-atomfeed.git" branch="2.2" />
      </materials>
      <stage name="build">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="/usr/share/applications/mvn/bin/mvn">
                <arg>clean</arg>
                <arg>install</arg>
              </exec>
            </tasks>
            <artifacts>
              <artifact src="**/*.omod" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="release">
        <approval type="manual" />
        <jobs>
          <job name="default">
            <tasks>
              <fetchartifact pipeline="AtomFeedOmod" stage="build" job="build" srcdir="openmrs-atomfeed-omod">
                <runif status="passed" />
              </fetchartifact>
              <exec command="ls">
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="**/*.omod" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="TerminologyServer">
      <materials>
        <git url="https://github.com/SharedHealth/Terminology-Server.git" />
        <pipeline pipelineName="TerminologyServerFeed" stageName="build_server_feed" materialName="TerminologyServerFeed" />
      </materials>
      <stage name="build" cleanWorkingDir="true">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>sh build-dist.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="build/distributions/bdshr-terminology-server-0.1-*.noarch.rpm" dest="TR-BUILD" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="qa">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>wget https://oss.sonatype.org/service/local/repositories/releases/content/org/ict4h/openmrs/openmrs-atomfeed-omod/2.2/openmrs-atomfeed-omod-2.2.jar -O openmrs-atomfeed-2.2.omod</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>wget https://modules.openmrs.org/modulus/api/releases/1138/download/webservices.rest-omod-2.9.omod -O webservices.rest-2.9.omod</arg>
                <runif status="passed" />
              </exec>
              <fetchartifact pipeline="TerminologyServer" stage="build" job="build" srcdir="TR-BUILD">
                <runif status="passed" />
              </fetchartifact>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy -v /playbooks/FreeSHR-Playbooks/all.yml -t tr-server -i /playbooks/FreeSHR-Playbooks/qa --extra-vars="rpm=/var/lib/go-agent/pipelines/TerminologyServer/TR-BUILD/bdshr-terminology-server-0.1-$GO_PIPELINE_COUNTER.noarch.rpm" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy -v /playbooks/FreeSHR-Playbooks/all.yml -t tr-feed-server -i /playbooks/FreeSHR-Playbooks/qa --extra-vars="atomfeedomod=/var/lib/go-agent/pipelines/TerminologyServer/openmrs-atomfeed-2.2.omod" --extra-vars="restomod=/var/lib/go-agent/pipelines/TerminologyServer/webservices.rest-2.9.omod" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="showcase">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>wget https://oss.sonatype.org/service/local/repositories/releases/content/org/ict4h/openmrs/openmrs-atomfeed-omod/2.2/openmrs-atomfeed-omod-2.2.jar -O openmrs-atomfeed-2.2.omod</arg>
                <runif status="passed" />
              </exec>
              <exec command="wget">
                <arg>-c</arg>
                <arg>wget https://modules.openmrs.org/modulus/api/releases/1138/download/webservices.rest-omod-2.9.omod -O webservices.rest-2.9.omod</arg>
                <runif status="passed" />
              </exec>
              <fetchartifact pipeline="TerminologyServer" stage="build" job="build" srcdir="TR-BUILD">
                <runif status="passed" />
              </fetchartifact>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy -v /playbooks/FreeSHR-Playbooks/all.yml -t tr-server -i /playbooks/FreeSHR-Playbooks/showcase --extra-vars="rpm=/var/lib/go-agent/pipelines/TerminologyServer/TR-BUILD/bdshr-terminology-server-0.1-$GO_PIPELINE_COUNTER.noarch.rpm" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy -v /playbooks/FreeSHR-Playbooks/all.yml -t tr-feed-server -i /playbooks/FreeSHR-Playbooks/showcase --extra-vars="atomfeedomod=/var/lib/go-agent/pipelines/TerminologyServer/openmrs-atomfeed-2.2.omod" --extra-vars="restomod=/var/lib/go-agent/pipelines/TerminologyServer/webservices.rest-2.9.omod" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="TerminologyServerFeed">
      <materials>
        <git url="https://github.com/SharedHealth/openmrs-module-freeshr_terminology_feed.git" />
      </materials>
      <stage name="build_server_feed">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="/usr/share/applications/mvn/bin/mvn">
                <arg>clean</arg>
                <arg>install</arg>
              </exec>
            </tasks>
            <artifacts>
              <artifact src="**/*.omod" dest="TR-FEED-BUILD" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="qa">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>wget https://oss.sonatype.org/service/local/repositories/releases/content/org/ict4h/openmrs/openmrs-atomfeed-omod/2.2/openmrs-atomfeed-omod-2.2.jar -O openmrs-atomfeed-2.2.omod</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>wget https://modules.openmrs.org/modulus/api/releases/1138/download/webservices.rest-omod-2.9.omod -O webservices.rest-2.9.omod</arg>
                <runif status="passed" />
              </exec>
              <fetchartifact pipeline="TerminologyServerFeed" stage="build_server_feed" job="build" srcdir="TR-FEED-BUILD">
                <runif status="passed" />
              </fetchartifact>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy -v /playbooks/FreeSHR-Playbooks/all.yml -t tr-feed-server -i /playbooks/FreeSHR-Playbooks/qa --extra-vars="trfeedomod=/var/lib/go-agent/pipelines/TerminologyServerFeed/TR-FEED-BUILD/omod/target/freeshr-terminology-feed-*.omod" --extra-vars="atomfeedomod=/var/lib/go-agent/pipelines/TerminologyServerFeed/openmrs-atomfeed-2.2.omod" --extra-vars="restomod=/var/lib/go-agent/pipelines/TerminologyServerFeed/webservices.rest-2.9.omod" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="showcase">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>wget https://oss.sonatype.org/service/local/repositories/releases/content/org/ict4h/openmrs/openmrs-atomfeed-omod/2.2/openmrs-atomfeed-omod-2.2.jar -O openmrs-atomfeed-2.2.omod</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>wget https://modules.openmrs.org/modulus/api/releases/1138/download/webservices.rest-omod-2.9.omod -O webservices.rest-2.9.omod</arg>
                <runif status="passed" />
              </exec>
              <fetchartifact pipeline="TerminologyServerFeed" stage="build_server_feed" job="build" srcdir="TR-FEED-BUILD">
                <runif status="passed" />
              </fetchartifact>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy -v /playbooks/FreeSHR-Playbooks/all.yml -t tr-feed-server -i /playbooks/FreeSHR-Playbooks/showcase --extra-vars="trfeedomod=/var/lib/go-agent/pipelines/TerminologyServerFeed/TR-FEED-BUILD/omod/target/freeshr-terminology-feed-*.omod" --extra-vars="atomfeedomod=/var/lib/go-agent/pipelines/TerminologyServerFeed/openmrs-atomfeed-2.2.omod" --extra-vars="restomod=/var/lib/go-agent/pipelines/TerminologyServerFeed/webservices.rest-2.9.omod" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="openmrs-module_terminology-atomfeed-client" isLocked="false">
      <materials>
        <git url="https://github.com/SharedHealth/openmrs-module-terminology_atomfeed_client.git" />
      </materials>
      <stage name="build">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="/usr/share/applications/mvn/bin/mvn">
                <arg>clean</arg>
                <arg>install</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="**/*.omod" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="qa" fetchMaterials="false">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>curl -u admin:p@ssw0rd678 http://172.18.46.51:8153/go/files/openmrs-module_terminology-atomfeed-client/$GO_PIPELINE_COUNTER/build/latest/build/target/openmrs-module-terminology_atomfeed_client-1.0-SNAPSHOT.omod &gt; /tmp/openmrs-module-terminology_atomfeed_client-1.0-SNAPSHOT.omod</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Bahmni-Playbooks/tr-feed-client.yml -i /playbooks/FreeSHR-Bahmni-Playbooks/qa --extra-vars "omod=/tmp/openmrs-module-terminology_atomfeed_client-1.0-SNAPSHOT.omod" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="showcase">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>curl -u admin:p@ssw0rd678 http://172.18.46.51:8153/go/files/openmrs-module_terminology-atomfeed-client/$GO_PIPELINE_COUNTER/build/latest/build/target/openmrs-module-terminology_atomfeed_client-1.0-SNAPSHOT.omod &gt; /tmp/openmrs-module-terminology_atomfeed_client-1.0-SNAPSHOT.omod</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Bahmni-Playbooks/tr-feed-client.yml -i /playbooks/FreeSHR-Bahmni-Playbooks/showcase --extra-vars "omod=/tmp/openmrs-module-terminology_atomfeed_client-1.0-SNAPSHOT.omod"</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="bdshr-config">
      <materials>
        <git url="https://github.com/SharedHealth/bdshr-config.git" />
      </materials>
      <stage name="build">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="sh">
                <arg>scripts/package.sh</arg>
              </exec>
            </tasks>
            <artifacts>
              <artifact src="target/bdshr_config.zip" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="qa">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy -v -i /playbooks/FreeSHR-Bahmni-Playbooks/qa /playbooks/FreeSHR-Bahmni-Playbooks/bahmni-server.yml --extra-vars="release_version=release-5.0" --extra-vars="config_file=/var/lib/go-agent/pipelines/bdshr-config/target/bdshr_config.zip" --tags deploy-config --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="Showcase">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy -v -i /playbooks/FreeSHR-Bahmni-Playbooks/showcase /playbooks/FreeSHR-Bahmni-Playbooks/bahmni-server.yml --extra-vars="release_version=release-5.0" --extra-vars="config_file=/var/lib/go-agent/pipelines/bdshr-config/target/bdshr_config.zip" --tags deploy-config --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="SHR-Datasense" isLocked="false">
      <materials>
        <git url="https://github.com/SharedHealth/SHR-Datasense.git" />
      </materials>
      <stage name="build">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>sh build-dist.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="build/distributions/datasense-0.1-*.noarch.rpm" />
              <artifact src="build/distributions/dhis_config.zip" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="qa">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>curl -u admin:p@ssw0rd678 http://172.18.46.51:8153/go/files/SHR-Datasense/$GO_PIPELINE_COUNTER/build/latest/build/datasense-0.1-$GO_PIPELINE_COUNTER.noarch.rpm &gt; /tmp/datasense-0.1-$GO_PIPELINE_COUNTER.noarch.rpm</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>curl -u admin:p@ssw0rd678 http://172.18.46.51:8153/go/files/SHR-Datasense/$GO_PIPELINE_COUNTER/build/latest/build/dhis_config.zip &gt; /tmp/dhis_config.zip</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Playbooks/all.yml -t datasense -i /playbooks/FreeSHR-Playbooks/qa --extra-vars "rpm=/tmp/datasense-0.1-$GO_PIPELINE_COUNTER.noarch.rpm" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="showcase">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>curl -u admin:p@ssw0rd678 http://172.18.46.51:8153/go/files/SHR-Datasense/$GO_PIPELINE_COUNTER/build/latest/build/datasense-0.1-$GO_PIPELINE_COUNTER.noarch.rpm &gt; /tmp/datasense-0.1-$GO_PIPELINE_COUNTER.noarch.rpm</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>curl -u admin:p@ssw0rd678 http://172.18.46.51:8153/go/files/SHR-Datasense/$GO_PIPELINE_COUNTER/build/latest/build/dhis_config.zip &gt; /tmp/dhis_config.zip</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Playbooks/all.yml -t datasense -i /playbooks/FreeSHR-Playbooks/showcase --extra-vars "rpm=/tmp/datasense-0.1-$GO_PIPELINE_COUNTER.noarch.rpm" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="PatientJournal" isLocked="false">
      <materials>
        <git url="https://github.com/SharedHealth/PatientJournal.git" />
      </materials>
      <stage name="build">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>sh build-dist.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Coverage" path="build/reports/cobertura/index.html" />
            </tabs>
            <artifacts>
              <test src="build/reports/cobertura/" />
              <artifact src="build/distributions/patient-journal-0.1-*.noarch.rpm" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="qa">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>curl -u admin:p@ssw0rd678 http://172.18.46.51:8153/go/files/PatientJournal/$GO_PIPELINE_COUNTER/build/latest/build/patient-journal-0.1-$GO_PIPELINE_COUNTER.noarch.rpm &gt; /tmp/patient-journal-0.1-$GO_PIPELINE_COUNTER.noarch.rpm</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Playbooks/all.yml -t patient-journal -i /playbooks/FreeSHR-Playbooks/qa --extra-vars "rpm=/tmp/patient-journal-0.1-$GO_PIPELINE_COUNTER.noarch.rpm" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="showcase">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>curl -u admin:p@ssw0rd678 http://172.18.46.51:8153/go/files/PatientJournal/$GO_PIPELINE_COUNTER/build/latest/build/patient-journal-0.1-$GO_PIPELINE_COUNTER.noarch.rpm &gt; /tmp/patient-journal-0.1-$GO_PIPELINE_COUNTER.noarch.rpm</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Playbooks/all.yml -t patient-journal -i /playbooks/FreeSHR-Playbooks/showcase --extra-vars "rpm=/tmp/patient-journal-0.1-$GO_PIPELINE_COUNTER.noarch.rpm" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="IdentityServer" isLocked="false">
      <materials>
        <git url="https://github.com/SharedHealth/Identity-Server.git" />
      </materials>
      <stage name="build">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="./gradlew">
                <arg>clean</arg>
                <arg>test</arg>
                <arg>dist</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Coverage" path="build/reports/cobertura/index.html" />
            </tabs>
            <artifacts>
              <test src="build/reports/cobertura/" />
              <artifact src="build/distributions/identity-server-0.1-1.noarch.rpm" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="qa">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>curl -u admin:p@ssw0rd678 http://172.18.46.51:8153/go/files/IdentityServer/$GO_PIPELINE_COUNTER/build/latest/build/identity-server-0.1-1.noarch.rpm &gt; /tmp/identity-server-0.1-1.noarch.rpm</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Playbooks/all.yml -t identity-server -i /playbooks/FreeSHR-Playbooks/qa --extra-vars "all_rpms=/tmp/identity-server-0.1-1.noarch.rpm" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="showcase">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>curl -u admin:p@ssw0rd678 http://172.18.46.51:8153/go/files/IdentityServer/$GO_PIPELINE_COUNTER/build/latest/build/identity-server-0.1-1.noarch.rpm &gt; /tmp/identity-server-0.1-1.noarch.rpm</arg>
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Playbooks/all.yml -t identity-server -i /playbooks/FreeSHR-Playbooks/showcase --extra-vars "all_rpms=/tmp/identity-server-0.1-1.noarch.rpm" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="FreeSHRUpdate" isLocked="false">
      <materials>
        <git url="https://github.com/SharedHealth/freeshr-update.git" />
      </materials>
      <stage name="build">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>sh build-dist.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="build/distributions/freeshr-update-0.1-*.noarch.rpm" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="qa">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>curl -u admin:p@ssw0rd678 http://172.18.46.51:8153/go/files/FreeSHRUpdate/$GO_PIPELINE_COUNTER/build/latest/build/freeshr-update-0.1-$GO_PIPELINE_COUNTER.noarch.rpm &gt; /tmp/freeshr-update-0.1-$GO_PIPELINE_COUNTER.noarch.rpm</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Playbooks/all.yml -t freeshr-update-server -i /playbooks/FreeSHR-Playbooks/qa --extra-vars "rpm=/tmp/freeshr-update-0.1-$GO_PIPELINE_COUNTER.noarch.rpm" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="showcase">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>curl -u admin:p@ssw0rd678 http://172.18.46.51:8153/go/files/FreeSHRUpdate/$GO_PIPELINE_COUNTER/build/latest/build/freeshr-update-0.1-$GO_PIPELINE_COUNTER.noarch.rpm &gt; /tmp/freeshr-update-0.1-$GO_PIPELINE_COUNTER.noarch.rpm</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Playbooks/all.yml -t freeshr-update-server -i /playbooks/FreeSHR-Playbooks/showcase --extra-vars "rpm=/tmp/freeshr-update-0.1-$GO_PIPELINE_COUNTER.noarch.rpm" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <pipelines group="MCI-Pipelines">
    <pipeline name="mci-ui">
      <materials>
        <git url="https://github.com/SharedHealth/MCI-Admin.git" />
      </materials>
      <stage name="build">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="bin/build.sh">
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="build/mci-ui-1.0.tgz" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="qa">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>curl -u admin:p@ssw0rd678 http://172.18.46.51:8153/go/files/mci-ui/$GO_PIPELINE_COUNTER/build/latest/build/mci-ui-1.0.tgz &gt; /tmp/mci-ui-1.0.tgz</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Playbooks/all.yml -t mci-ui -i /playbooks/FreeSHR-Playbooks/qa --extra-vars "dist=/tmp/mci-ui-1.0.tgz" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="showcase">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>curl -u admin:p@ssw0rd678 http://172.18.46.51:8153/go/files/mci-ui/$GO_PIPELINE_COUNTER/build/latest/build/mci-ui-1.0.tgz &gt; /tmp/mci-ui-1.0.tgz</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Playbooks/all.yml -t mci-ui -i /playbooks/FreeSHR-Playbooks/showcase --extra-vars "dist=/tmp/mci-ui-1.0.tgz" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="mci">
      <materials>
        <git url="https://github.com/SharedHealth/MCI-Service.git" />
      </materials>
      <stage name="build">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>sh build-dist.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="mci-api/build/distributions/mci-0.1-*.noarch.rpm" />
              <test src="mci-api/build/reports/cobertura" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="qa">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>curl -u admin:p@ssw0rd678 http://172.18.46.51:8153/go/files/mci/$GO_PIPELINE_COUNTER/build/latest/build/mci-0.1-$GO_PIPELINE_COUNTER.noarch.rpm &gt; /tmp/mci-0.1-$GO_PIPELINE_COUNTER.noarch.rpm</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Playbooks/all.yml -t mci-server -i /playbooks/FreeSHR-Playbooks/qa --extra-vars "rpm=/tmp/mci-0.1-$GO_PIPELINE_COUNTER.noarch.rpm" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="showcase">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>curl -u admin:p@ssw0rd678 http://172.18.46.51:8153/go/files/mci/$GO_PIPELINE_COUNTER/build/latest/build/mci-0.1-$GO_PIPELINE_COUNTER.noarch.rpm &gt; /tmp/mci-0.1-$GO_PIPELINE_COUNTER.noarch.rpm</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Playbooks/all.yml -t mci-server -i /playbooks/FreeSHR-Playbooks/showcase --extra-vars "rpm=/tmp/mci-0.1-$GO_PIPELINE_COUNTER.noarch.rpm" --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <pipelines group="smoke">
    <pipeline name="api-tests">
      <materials>
        <git url="https://github.com/SharedHealth/functional-tests.git" />
      </materials>
      <stage name="defaultStage">
        <approval type="manual" />
        <jobs>
          <job name="shr_api">
            <tasks>
              <exec command="mocha" workingdir="shr_api_test">
                <arg>spec</arg>
                <arg>--require</arg>
                <arg>spec/helpers/chai.js</arg>
                <arg>--timeout</arg>
                <arg>10000</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>api</resource>
              <resource>node</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <pipelines group="Setup-QA">
    <pipeline name="Cassandra-cluster-qa">
      <materials>
        <git url="https://github.com/SharedHealth/FreeSHR-Playbooks.git" autoUpdate="false" materialName="FreeSHR-Playbooks" />
      </materials>
      <stage name="QA">
        <approval type="manual" />
        <jobs>
          <job name="set_up">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Playbooks/all.yml -t cassandra -i /playbooks/FreeSHR-Playbooks/qa --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="MCI-Seed-Data">
      <materials>
        <git url="https://github.com/SharedHealth/HIE-Data.git" />
      </materials>
      <stage name="build">
        <approval type="manual" />
        <jobs>
          <job name="build">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>git-crypt unlock ~/secret-key</arg>
                <runif status="passed" />
              </exec>
              <exec command="./gradlew">
                <arg>jar</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="generate">
        <approval type="manual" />
        <jobs>
          <job name="Generate-Seed-Data">
            <environmentvariables>
              <variable name="seed-data-location">
                <value>~/seed-data</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>java -jar build/libs/HIE-Data-1.0.jar mci qa ~/seed-data</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="install-data">
        <approval type="manual" />
        <jobs>
          <job name="install">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-playbook /playbooks/FreeSHR-Playbooks/all.yml -t mci-seed-data -i /playbooks/FreeSHR-Playbooks/qa --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="Bahmni-Seed-Data">
      <materials>
        <git url="https://github.com/SharedHealth/HIE-Data.git" />
      </materials>
      <stage name="build">
        <approval type="manual" />
        <jobs>
          <job name="build">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>git-crypt unlock ~/secret-key</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>./gradlew jar</arg>
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="generate">
        <approval type="manual" />
        <jobs>
          <job name="Generate-Scripts">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>java -jar build/libs/HIE-Data-1.0.jar shr-client prod ~/seed-data</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="install-data">
        <approval type="manual" />
        <jobs>
          <job name="install-location">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Bahmni-Playbooks/shr-client.yml -i /playbooks/FreeSHR-Bahmni-Playbooks/qa -t shr-client-locations --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
          <job name="install-facilities">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Bahmni-Playbooks/shr-client.yml -i /playbooks/FreeSHR-Bahmni-Playbooks/qa -t shr-client-facilities --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
          <job name="install-providers">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Bahmni-Playbooks/shr-client.yml -i /playbooks/FreeSHR-Bahmni-Playbooks/qa -t shr-client-providers --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="HA-Proxy">
      <materials>
        <git url="http://github.com/SharedHealth/FreeSHR-Playbooks.git" autoUpdate="false" materialName="FreeSHR-Playbooks" />
      </materials>
      <stage name="QA">
        <jobs>
          <job name="setup">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Playbooks/all.yml -t haproxy -i /playbooks/FreeSHR-Playbooks/qa --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <pipelines group="Setup-Showcase">
    <pipeline name="Cassandra-cluster-showcase">
      <materials>
        <git url="https://github.com/SharedHealth/FreeSHR-Playbooks.git" autoUpdate="false" />
      </materials>
      <stage name="showcase">
        <approval type="manual" />
        <jobs>
          <job name="set_up">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>ansible-deploy /playbooks/FreeSHR-Playbooks/all.yml -t cassandra -i /playbooks/FreeSHR-Playbooks/showcase --vault-password-file ~/.vaultpass.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
